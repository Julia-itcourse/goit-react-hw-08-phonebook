{"version":3,"sources":["components/ContactItem/ContactItem.module.css","components/PhonebookForm/PhonebookForm.module.css","components/Filter/Filter.module.css","components/ContactItem/ContactItem.jsx","redux/contacts/contactsSelectors.js","components/ContactList/ContactList.jsx","components/PhonebookForm/PhonebookForm.jsx","components/Filter/Filter.jsx","components/Logo/Logo.jsx","views/ContactsView.js"],"names":["module","exports","connect","state","dispatch","ownProps","onRemoveContact","contactsOperations","onRemoveContacts","contact","id","className","styles","item","text","name","number","button","type","onClick","getContacts","contacts","items","getFilter","filter","getFilteredContacts","createSelector","toLowerCase","includes","mapDispatchToProps","contactsSelectors","TransitionGroup","component","map","CSSTransition","timeout","classNames","PhonebookForm","showNotification","handleChange","target","value","setState","handleSubmit","event","preventDefault","uuidv4","console","log","dir","props","find","existingContact","setTimeout","onAddContact","onSubmit","this","form__group","form__input","onChange","placeholder","required","in","unmountOnExit","notification","Component","Filter","onChangeFilter","filter__wrap","defaultProps","contactsActions","Logo","ContactsView","onFetchTasks","appear","length","onFetchContacts"],"mappings":"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","file":"static/js/3.b3f894e7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"ContactItem_text__1TyP4\",\"item\":\"ContactItem_item__28xRk\",\"button\":\"ContactItem_button__3118v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form__group\":\"PhonebookForm_form__group__2d8Uo\",\"form__label\":\"PhonebookForm_form__label__2BEU0\",\"form__input\":\"PhonebookForm_form__input__1wfdx\",\"button\":\"PhonebookForm_button__QaTWH\",\"notification\":\"PhonebookForm_notification__2gVEW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__wrap\":\"Filter_filter__wrap__2W3yc\",\"form__input\":\"Filter_form__input__ZkPKi\"};","import React from \"react\"\r\nimport styles from \"./ContactItem.module.css\"\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from \"react-redux\"\r\nimport contactsOperations from \"../../redux/contacts/contactsOperations\"\r\n\r\nconst ContactItem = ({ contact , onRemoveContact}) => {\r\n  return (\r\n    <li className={styles.item}>\r\n      <span className={styles.text}>\r\n        {contact.name}: {contact.number}\r\n      </span>\r\n      <button className={styles.button} type=\"button\" onClick={onRemoveContact}>\r\n        Remove\r\n      </button>\r\n    </li>\r\n  )\r\n}\r\n\r\n\r\n\r\nContactItem.propTypes = {\r\n  contact: PropTypes.objectOf(PropTypes.string).isRequired\r\n}\r\n\r\nconst mapStateToProps = state=>{\r\n return state\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => (\r\n  {onRemoveContact: () => dispatch(contactsOperations.onRemoveContacts(ownProps.contact.id))}\r\n);\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactItem)\r\n","import { createSelector } from \"@reduxjs/toolkit\"\r\n\r\nconst getContacts = (state) => state.contacts.items\r\n\r\nconst getFilter = (state) => state.contacts.filter\r\n\r\nconst getFilteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    )\r\n  }\r\n)\r\n\r\nexport default {\r\n  getContacts,\r\n  getFilter,\r\n  getFilteredContacts,\r\n}\r\n","import React from \"react\"\r\nimport ContactItem from \"../ContactItem\"\r\nimport PropTypes, { arrayOf } from \"prop-types\"\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\"\r\nimport \"./ContactList.css\"\r\nimport { connect } from \"react-redux\"\r\nimport contactsOperations from \"../../redux/contacts/contactsOperations\"\r\nimport contactsSelectors from \"../../redux/contacts/contactsSelectors\"\r\n\r\n\r\nconst ContactList = ({ contacts, onRemoveContact }) => {\r\n  return (\r\n    <TransitionGroup component=\"ul\" className=\"ContactList\">\r\n      {contacts.map((item) => (\r\n        <CSSTransition\r\n          key={item.id}\r\n          timeout={250}\r\n          classNames=\"ContactList-item-slide\"\r\n        >\r\n          <ContactItem\r\n            contact={item}\r\n            onRemoveContact={() => onRemoveContact(item.id)}\r\n          />\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  )\r\n}\r\n\r\n// ContactList.propTypes = {\r\n//   contacts: arrayOf(PropTypes.object)\r\n\r\n// }\r\n\r\nconst mapStateToProps = (state) => ({\r\n contacts: contactsSelectors.getFilteredContacts(state),\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  onRemoveContact: contactsOperations.onRemoveContact,\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList)\r\n","import React, { Component } from \"react\"\r\nimport styles from \"./PhonebookForm.module.css\"\r\nimport { v4 as uuidv4 } from \"uuid\"\r\nimport { CSSTransition } from \"react-transition-group\"\r\nimport \"./notification.css\"\r\nimport { connect } from \"react-redux\"\r\nimport contactsOperations from \"../../redux/contacts/contactsOperations\"\r\n\r\nclass PhonebookForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    showNotification: false,\r\n  }\r\n\r\n  handleChange = ({ target: { value, name } }) => {\r\n    this.setState({ [name]: value })\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    }\r\n\r\n    console.log(\"PhonebookForm.handleSubmit\")\r\n    console.dir(this.props.contacts)\r\n\r\n    const sameContact = this.props.contacts.items.find(\r\n      (existingContact) => existingContact.name === contact.name\r\n    )\r\n    if (sameContact) {\r\n      console.log(\"same contact exists\")\r\n      this.setState({ showNotification: true })\r\n      setTimeout(() => {\r\n        this.setState({ showNotification: false })\r\n      }, 1500)\r\n    } else {\r\n      this.props.onAddContact(contact)\r\n      this.setState({ name: \"\", number: \"\" })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.form__group}>\r\n        <input\r\n          className={styles.form__input}\r\n          name=\"name\"\r\n          type=\"text\"\r\n          value={this.state.name}\r\n          onChange={this.handleChange}\r\n          placeholder=\"Name\"\r\n          required\r\n        />\r\n\r\n        <input\r\n          className={styles.form__input}\r\n          name=\"number\"\r\n          type=\"text\"\r\n          value={this.state.number}\r\n          onChange={this.handleChange}\r\n          placeholder=\"Phone number\"\r\n          required\r\n        />\r\n\r\n        <button className={styles.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n\r\n        <CSSTransition\r\n          in={this.state.showNotification}\r\n          classNames=\"notification\"\r\n          timeout={250}\r\n          unmountOnExit\r\n        >\r\n          <div className={styles.notification}>Contact already exists!</div>\r\n        </CSSTransition>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { contacts: state.contacts }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onAddContact: contactsOperations.onAddContact,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PhonebookForm)\r\n","import React from \"react\"\r\nimport styles from \"./Filter.module.css\"\r\nimport PropTypes from \"prop-types\"\r\nimport {connect} from 'react-redux'\r\nimport contactsActions from '../../redux/contacts/contactsActions'\r\nimport contactsSelectors from '../../redux/contacts/contactsSelectors'\r\n\r\nconst Filter = ({ value, onChangeFilter }) => {\r\n  return (\r\n    <div className = {styles.filter__wrap}>\r\n    <h2>Filter the contact list</h2>\r\n    <label>\r\n      <input\r\n        className={styles.form__input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={(event) => onChangeFilter(event.target.value)}\r\n      />\r\n    </label>\r\n    </div>\r\n  )\r\n}\r\n\r\nFilter.defaultProps = {\r\n  value: \"\",\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n  value: contactsSelectors.getFilter(state),\r\n // value:state.contacts.filter,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  onChangeFilter: contactsActions.onChangeFilter\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter)\r\n","import React from 'react'\r\nimport {CSSTransition} from 'react-transition-group'\r\nimport  './Logo.css'\r\n\r\nconst Logo = () => {\r\n    return (\r\n      \r\n  \r\n       <h1 className=\"Logo\">Phonebook</h1> \r\n\r\n)\r\n}\r\n\r\nexport default Logo","import React, { Component } from \"react\"\r\nimport { CSSTransition } from \"react-transition-group\"\r\nimport { connect } from \"react-redux\"\r\nimport ContactList from \"../components/ContactList\"\r\nimport PhonebookForm from \"../components/PhonebookForm\"\r\nimport Filter from \"../components/Filter\"\r\nimport Logo from \"../components/Logo\"\r\nimport contactsOperations from \"../redux/contacts/contactsOperations\"\r\n\r\nclass ContactsView extends Component {\r\n  componentDidMount() {\r\n    this.props.onFetchTasks()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <CSSTransition\r\n          in={true}\r\n          appear={true}\r\n          timeout={500}\r\n          classNames=\"Logo-slideIn\"\r\n        >\r\n          <Logo />\r\n        </CSSTransition>\r\n\r\n        <PhonebookForm />\r\n\r\n        <CSSTransition\r\n          in={this.props.contacts.length > 1||this.props.filter}\r\n          timeout={500}\r\n          classNames={\"filter\"}\r\n          unmountOnExit\r\n        >\r\n          <Filter />\r\n        </CSSTransition>\r\n\r\n        <ContactList />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { contacts: state.contacts.items,\r\n  filter: state.contacts.filter }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onFetchTasks: contactsOperations.onFetchContacts,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsView)\r\n"],"sourceRoot":""}